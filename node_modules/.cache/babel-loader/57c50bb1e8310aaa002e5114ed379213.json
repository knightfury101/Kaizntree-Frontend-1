{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function useEmployees() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [employees, setEmployees] = useState(null);\n  const fetchAll = useCallback(async () => {\n    console.log(\"useEmployees: fetchAll initiated\");\n\n    try {\n      const employeesData = await fetchWithCache(\"employees\");\n      setEmployees(employeesData);\n      console.log(\"useEmployees: Employees data fetched and set\");\n    } catch (error) {\n      // Ensure you have error handling!\n      console.error(\"useEmployees: Error fetching employees\", error);\n    }\n  }, [fetchWithCache]);\n  const invalidateData = useCallback(() => {\n    setEmployees(null);\n  }, []);\n  return {\n    data: employees,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(useEmployees, \"xHRebODCkuqIieeGNfQRT7ekr+E=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","useEmployees","fetchWithCache","loading","employees","setEmployees","fetchAll","console","log","employeesData","error","invalidateData","data"],"sources":["D:/projects/kaizntree_frontend_1/src/hooks/useEmployees.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { Employee } from \"../utils/types\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nimport { EmployeeResult } from \"./types\";\n\nexport function useEmployees(): EmployeeResult {\n  const { fetchWithCache, loading } = useCustomFetch();\n  const [employees, setEmployees] = useState<Employee[] | null>(null);\n\n  const fetchAll = useCallback(async () => {\n    console.log(\"useEmployees: fetchAll initiated\");\n\n    try {\n      const employeesData = await fetchWithCache<Employee[]>(\"employees\");\n      setEmployees(employeesData);\n      console.log(\"useEmployees: Employees data fetched and set\");\n    } catch (error) {\n      // Ensure you have error handling!\n      console.error(\"useEmployees: Error fetching employees\", error);\n    }\n  }, [fetchWithCache]);\n\n  const invalidateData = useCallback(() => {\n    setEmployees(null);\n  }, []);\n\n  return { data: employees, loading, fetchAll, invalidateData };\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAGA,OAAO,SAASC,YAAT,GAAwC;EAAA;;EAC7C,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAoB,IAApB,CAA1C;EAEA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,YAAY;IACvCS,OAAO,CAACC,GAAR,CAAY,kCAAZ;;IAEA,IAAI;MACF,MAAMC,aAAa,GAAG,MAAMP,cAAc,CAAa,WAAb,CAA1C;MACAG,YAAY,CAACI,aAAD,CAAZ;MACAF,OAAO,CAACC,GAAR,CAAY,8CAAZ;IACD,CAJD,CAIE,OAAOE,KAAP,EAAc;MACd;MACAH,OAAO,CAACG,KAAR,CAAc,wCAAd,EAAwDA,KAAxD;IACD;EACF,CAX2B,EAWzB,CAACR,cAAD,CAXyB,CAA5B;EAaA,MAAMS,cAAc,GAAGb,WAAW,CAAC,MAAM;IACvCO,YAAY,CAAC,IAAD,CAAZ;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEO,IAAI,EAAER,SAAR;IAAmBD,OAAnB;IAA4BG,QAA5B;IAAsCK;EAAtC,CAAP;AACD;;GAtBeV,Y;UACsBD,c"},"metadata":{},"sourceType":"module"}