{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\kaizntree_frontend_1\\\\src\\\\components\\\\InputSelect\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport Downshift from \"downshift\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect(_ref) {\n  _s();\n\n  let {\n    label,\n    defaultValue,\n    onChange: consumerOnChange,\n    items,\n    parseItem,\n    isLoading,\n    loadingLabel\n  } = _ref;\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const onChange = useCallback(selectedItem => {\n    if (selectedItem === null) {\n      return;\n    }\n\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange]);\n  useEffect(() => {\n    function handleScroll() {\n      const dropdownContainer = document.querySelector(\".KaizntreeInputSelect--dropdown-container\");\n      const inputElement = dropdownContainer === null || dropdownContainer === void 0 ? void 0 : dropdownContainer.previousElementSibling;\n\n      if (inputElement) {\n        const {\n          top,\n          left\n        } = getDropdownPosition(inputElement);\n        setDropdownPosition({\n          top,\n          left\n        });\n      }\n    }\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"KaizntreeSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: _ref2 => {\n      let {\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue\n      } = _ref2;\n      const toggleProps = getToggleButtonProps();\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"KaizntreeInputSelect--root\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"KaizntreeText--s KaizntreeText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"KaizntreeBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"KaizntreeInputSelect--input\",\n          onClick: event => {\n            setDropdownPosition(getDropdownPosition(event.target));\n            toggleProps.onClick(event);\n          },\n          children: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"KaizntreeInputSelect--dropdown-container\", {\n            \"KaizntreeInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this);\n\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"KaizntreeInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this);\n        }\n\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"KaizntreeInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this);\n        }\n\n        return items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...getItemProps({\n              key: parsedItem.value,\n              index,\n              item,\n              className: classNames(\"KaizntreeInputSelect--dropdown-item\", {\n                \"KaizntreeInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"KaizntreeInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputSelect, \"DhAq/JxUZQ6x6Uo4mOb4fULynhQ=\");\n\n_c = InputSelect;\n\nconst getDropdownPosition = target => {\n  if (target instanceof Element) {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    const {\n      scrollY\n    } = window;\n    return {\n      top: scrollY + top + 63,\n      left\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useEffect","useState","classNames","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","selectedItem","handleScroll","dropdownContainer","document","querySelector","inputElement","previousElementSibling","getDropdownPosition","window","addEventListener","removeEventListener","item","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","parsedSelectedItem","event","target","onClick","renderItems","length","map","index","parsedItem","key","value","className","Element","getBoundingClientRect","scrollY"],"sources":["D:/projects/kaizntree_frontend_1/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  DropdownPosition,\n  GetDropdownPositionFn,\n  InputSelectItem,\n  InputSelectOnChange,\n  InputSelectProps,\n} from \"./types\";\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(\n    defaultValue ?? null\n  );\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({\n    top: 0,\n    left: 0,\n  });\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      if (selectedItem === null) {\n        return;\n      }\n\n      consumerOnChange(selectedItem);\n      setSelectedValue(selectedItem);\n    },\n    [consumerOnChange]\n  );\n\n  useEffect(() => {\n    function handleScroll() {\n      const dropdownContainer = document.querySelector(\n        \".KaizntreeInputSelect--dropdown-container\"\n      );\n      const inputElement = dropdownContainer?.previousElementSibling;\n      if (inputElement) {\n        const { top, left } = getDropdownPosition(inputElement);\n        setDropdownPosition({ top, left });\n      }\n    }\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return (\n    <Downshift<TItem>\n      id=\"KaizntreeSelect\"\n      onChange={onChange}\n      selectedItem={selectedValue}\n      itemToString={(item) => (item ? parseItem(item).label : \"\")}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue,\n      }) => {\n        const toggleProps = getToggleButtonProps();\n        const parsedSelectedItem =\n          selectedItem === null ? null : parseItem(selectedItem);\n\n        return (\n          <div className=\"KaizntreeInputSelect--root\">\n            <label\n              className=\"KaizntreeText--s KaizntreeText--hushed\"\n              {...getLabelProps()}\n            >\n              {label}\n            </label>\n            <div className=\"KaizntreeBreak--xs\" />\n            <div\n              className=\"KaizntreeInputSelect--input\"\n              onClick={(event) => {\n                setDropdownPosition(getDropdownPosition(event.target));\n                toggleProps.onClick(event);\n              }}\n            >\n              {inputValue}\n            </div>\n\n            <div\n              className={classNames(\n                \"KaizntreeInputSelect--dropdown-container\",\n                {\n                  \"KaizntreeInputSelect--dropdown-container-opened\": isOpen,\n                }\n              )}\n              {...getMenuProps()}\n              style={{ top: dropdownPosition.top, left: dropdownPosition.left }}\n            >\n              {renderItems()}\n            </div>\n          </div>\n        );\n\n        function renderItems() {\n          if (!isOpen) {\n            return null;\n          }\n\n          if (isLoading) {\n            return (\n              <div className=\"KaizntreeInputSelect--dropdown-item\">\n                {loadingLabel}...\n              </div>\n            );\n          }\n\n          if (items.length === 0) {\n            return (\n              <div className=\"KaizntreeInputSelect--dropdown-item\">\n                No items\n              </div>\n            );\n          }\n\n          return items.map((item, index) => {\n            const parsedItem = parseItem(item);\n            return (\n              <div\n                key={parsedItem.value}\n                {...getItemProps({\n                  key: parsedItem.value,\n                  index,\n                  item,\n                  className: classNames(\"KaizntreeInputSelect--dropdown-item\", {\n                    \"KaizntreeInputSelect--dropdown-item-highlighted\":\n                      highlightedIndex === index,\n                    \"KaizntreeInputSelect--dropdown-item-selected\":\n                      parsedSelectedItem?.value === parsedItem.value,\n                  }),\n                })}\n              >\n                {parsedItem.label}\n              </div>\n            );\n          });\n        }\n      }}\n    </Downshift>\n  );\n}\n\nconst getDropdownPosition: GetDropdownPositionFn = (target) => {\n  if (target instanceof Element) {\n    const { top, left } = target.getBoundingClientRect();\n    const { scrollY } = window;\n    return {\n      top: scrollY + top + 63,\n      left,\n    };\n  }\n\n  return { top: 0, left: 0 };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}